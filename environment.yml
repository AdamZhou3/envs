# OVERVIEW
# This YAML script will attempt to install a Python virtual environment able to
# support the requirements of a Spatial Data Science or Geocomputation programme.
#
# INSTALLATION
# Note that, in the example commands below, you will need to replace {name} by the name 
# value specified as a configuration parameter below (the first line that does *not* 
# start with a hash (#). All the commands below should be run from the Terminal.
#
#######################
# NOTE: in the below, wherever you see '{name}'
# you should replace that with the name of the 
# environment you are installing (e.g. `sds2020`).
#######################
#
# If you've already installed this environment before:
#   conda remove --name {name} --all
#
# To install/reinstall the environment:
#   conda-env create -f environment.yml
#
# To install/update individual libraries you usually want to force the conda-forge channel:
#   conda install -c conda-forge osmnx
#
# A nice way to set the display name for the environment after activating the env:
#   conda activate {name}
#   python -m ipykernel install --name {name} --display-name "Friendly Name"
# To tidy up environments: 
#   jupyter kernelspec list
#   jupyter kernelspec uninstall unwanted-kernel 
#
# LAUNCH
# You can launch the 'old' notebook server by simply running:
#   jupyter notebook
# The more modern jupyter lab only seems to be launchable from within an environment:
#   conda activate {name}
#   jupyter lab
#
# CONFIGURATION PARAMETERS
name: sds2020
channels:
  - conda-forge
  - defaults
dependencies:
#  - python=3.7
  - pip 
  - black=20.8b1 # Supports code formatter labextension
  - bokeh=2.2.1 # interactive vis
  - cmake
  - cython
  - feather-format
  - geopandas=0.8.1
  - contextily=1.0.0 # context tile map
  - geopy=2.0.0 ##  geocoding web services
  - hdbscan
  - ipyleaflet
  - ipympl
  - ipyparallel
  - ipywidgets
  - jupyterlab_code_formatter # Supports labextension
  - legendgram=0.0.3
  - mkl-service
  - mysql-connector-python
  - nbdime #diffing and merging
  - networkx
  - osmnx
  - nltk=3.4.*
  - palettable=3.3.0 ## Color Palettes 
  - pandana=0.5.1 # For pysal segregation module
  - pointpats=2.2.0 # Point Pattern Analysis
  - polyline=1.4.0 #  Encoded Polyline Algorithm Format
  - psycopg2 
  - pygeos=0.8
  - pykrige=1.5.1 
#  - pypdf2 # Overkill
#  - pymc3 # Not well-supported on Windows 
  - pysal=2.3.0
  - python-language-server # Supports labextension
  - qgrid 
  - rasterio
  - rasterstats # zonal statistics and interpolated point queries.
  - scikit-learn
  - scikit-image
  - scipy
  - seaborn
  - spacy=2.3.* # NLP in Python.
  - sqlalchemy # python ORM
  - statsmodels
  - tabulate  # For exporting from pandas to markdown
  - tzlocal # time zone
#- urbanaccess  # For pysal segregation module
  - xlrd 
  - xlsxwriter
  - pip:
    #- git+http://github.com/sevamoo/SOMPY#egg=sompy # Doesn't run in Python3
    - git+http://github.com/kingsgeocomp/SOMPY#egg=sompy
    - smopy # NOT a typo! Not the same thing as sompy!
    - MulticoreTSNE
    - scikit-posthocs #  assess the differences between group levels
    - wordcloud
    - jupyter-lsp==0.9.2 # Supports labextension
    - jupyterlab_gitplus # Supports serverextension
#    - pdfkit # Overkill
#    - pypdf2 
#    - pyocr
#    - wand 